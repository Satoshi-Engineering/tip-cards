# these variables are only used for the integration test postgres service
variables:
  POSTGRES_DB: tipcards
  POSTGRES_USER: tipcards
  POSTGRES_PASSWORD: thisisonlyusedinthepipeline

test-integration:
  image: cypress/browsers:node-20.15.1-chrome-126.0.6478.114-1-ff-128.0-edge-126.0.2592.61-1
  services:
    - name: postgres:16.3
      alias: postgres
  stage: integration
  rules:
    - !reference [.shared_config, rules, no_tags]
    - !reference [.shared_config, rules, web_and_push]
    - when: on_success
  cache:
    - !reference [.shared_config, cache, node_modules]
  variables:
    NODE_ENV: test
  script:
    - |
      if [ "$CI_COMMIT_BRANCH" == "main" -a -f "$BACKEND_ENV_FILE_TEST_MAIN" ]
      then 
        echo "Running on main branch"
        cp $BACKEND_ENV_FILE_TEST_MAIN backend/.env.integrationTest
        cp $FRONTEND_ENV_FILE_TEST_MAIN frontend/.env.test.local
      elif [ -f "$BACKEND_ENV_FILE_TEST_DEVELOP" ]
      then
        echo "Running on develop branch"
        cp $BACKEND_ENV_FILE_TEST_DEVELOP backend/.env.integrationTest
        cp $FRONTEND_ENV_FILE_TEST_DEVELOP frontend/.env.test.local
      else
        echo "Running on feature branch"
        cp $BACKEND_ENV_FILE_TEST_FEATURE backend/.env.integrationTest
        cp $FRONTEND_ENV_FILE_TEST_FEATURE frontend/.env.test.local
      fi
    - echo "Running database migration to prepare database for integration tests"
    - npm run drizzle-migrate -- --envIntegrationTest
    - echo "Installing cypress"
    - npx cypress install
    - echo "Running backend integration test on branch $CI_COMMIT_BRANCH"
    - sh integration-tests.sh
